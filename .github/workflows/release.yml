name: Release SingDNS

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v3
        
      - name: 设置 Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmmirror.com'
          
      - name: 缓存 npm 依赖
        uses: actions/cache@v3
        with:
          path: |
            web/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('web/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
            
      - name: 构建前端
        run: |
          cd web
          npm ci
          DISABLE_ESLINT_PLUGIN=true CI=false npm run build
          cd ..
          
      - name: 上传前端构建产物
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: web/build
          
  build-backend-linux:
    runs-on: ubuntu-latest
    needs: build-frontend
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v3
        
      - name: 设置 Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          
      - name: 缓存 Go 依赖
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
            
      - name: 安装依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc libc6-dev sqlite3 libsqlite3-dev
          
      - name: 构建后端
        run: |
          go mod download
          CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -buildvcs=false -o singdns ./cmd/singdns
          
      - name: 下载前端构建产物
        uses: actions/download-artifact@v3
        with:
          name: frontend-build
          path: web/build
          
      - name: 下载 sing-box
        run: |
          SING_BOX_VERSION="1.9.0"
          echo "下载 sing-box 版本: ${SING_BOX_VERSION}"
          wget -O sing-box.tar.gz "https://github.com/SagerNet/sing-box/releases/download/v${SING_BOX_VERSION}/sing-box-${SING_BOX_VERSION}-linux-amd64.tar.gz"
          tar xzf sing-box.tar.gz
          mv "sing-box-${SING_BOX_VERSION}-linux-amd64/sing-box" ./sing-box
          chmod +x sing-box

      - name: 准备配置目录
        run: |
          mkdir -p configs/sing-box/rules
          # 下载规则文件
          for i in {1..3}; do
            if wget -O configs/sing-box/rules/geoip.srs https://github.com/SagerNet/sing-geoip/releases/latest/download/geoip.db; then
              break
            fi
            if [ $i -eq 3 ]; then
              echo "下载 geoip 规则文件失败"
              exit 1
            fi
            sleep 5
          done
          
          for i in {1..3}; do
            if wget -O configs/sing-box/rules/geosite.srs https://github.com/SagerNet/sing-geosite/releases/latest/download/geosite.db; then
              break
            fi
            if [ $i -eq 3 ]; then
              echo "下载 geosite 规则文件失败"
              exit 1
            fi
            sleep 5
          done
          
      - name: 打包文件
        run: |
          mkdir -p release/singdns
          # 创建目录结构
          mkdir -p release/singdns/bin/web/metacubexd
          mkdir -p release/singdns/bin/web/yacd
          mkdir -p release/singdns/web
          mkdir -p release/singdns/configs/sing-box/rules
          # 复制主程序
          cp singdns release/singdns/
          # 复制 sing-box 到 bin 目录
          cp sing-box release/singdns/bin/
          # 复制面板到 bin/web 目录
          cp -r bin/web/metacubexd/* release/singdns/bin/web/metacubexd/
          cp -r bin/web/yacd/* release/singdns/bin/web/yacd/
          # 复制前端构建文件到 web 目录
          cp -r web/build/* release/singdns/web/
          # 复制配置文件和规则文件
          cp configs/sing-box/config.json release/singdns/configs/sing-box/
          cp configs/sing-box/rules/*.srs release/singdns/configs/sing-box/rules/
          # 复制脚本和文档
          cp install.sh release/singdns/
          cp singdns.sh release/singdns/
          cp README.md release/singdns/
          cp LICENSE release/singdns/ || true
          # 创建版本文件
          echo "${GITHUB_REF_NAME}" > release/singdns/VERSION
          # 打包
          cd release
          tar -czf singdns-linux-amd64.tar.gz singdns/
          
      - name: 上传 Linux 构建产物
        uses: actions/upload-artifact@v3
        with:
          name: singdns-linux
          path: release/singdns-linux-amd64.tar.gz

  build-backend-alpine:
    runs-on: ubuntu-latest
    container:
      image: alpine:latest
    needs: build-frontend
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v3
        
      - name: 安装依赖
        run: |
          apk add --no-cache go gcc musl-dev sqlite-dev
          
      - name: 构建后端
        run: |
          go mod download
          CGO_ENABLED=1 GOOS=linux GOARCH=amd64 CGO_CFLAGS="-D_LARGEFILE64_SOURCE" go build -buildvcs=false -o singdns ./cmd/singdns
          
      - name: 下载前端构建产物
        uses: actions/download-artifact@v3
        with:
          name: frontend-build
          path: web/build
          
      - name: 下载 sing-box
        run: |
          SING_BOX_VERSION="1.9.0"
          echo "下载 sing-box 版本: ${SING_BOX_VERSION}"
          wget -O sing-box.tar.gz "https://github.com/SagerNet/sing-box/releases/download/v${SING_BOX_VERSION}/sing-box-${SING_BOX_VERSION}-linux-amd64.tar.gz"
          tar xzf sing-box.tar.gz
          mv "sing-box-${SING_BOX_VERSION}-linux-amd64/sing-box" ./sing-box
          chmod +x sing-box
          
      - name: 准备配置目录
        run: |
          mkdir -p configs/sing-box/rules
          # 下载规则文件
          for i in {1..3}; do
            if wget -O configs/sing-box/rules/geoip.srs https://github.com/SagerNet/sing-geoip/releases/latest/download/geoip.db; then
              break
            fi
            if [ $i -eq 3 ]; then
              echo "下载 geoip 规则文件失败"
              exit 1
            fi
            sleep 5
          done
          
          for i in {1..3}; do
            if wget -O configs/sing-box/rules/geosite.srs https://github.com/SagerNet/sing-geosite/releases/latest/download/geosite.db; then
              break
            fi
            if [ $i -eq 3 ]; then
              echo "下载 geosite 规则文件失败"
              exit 1
            fi
            sleep 5
          done
          
      - name: 打包文件
        run: |
          mkdir -p release/singdns
          # 创建目录结构
          mkdir -p release/singdns/bin/web/metacubexd
          mkdir -p release/singdns/bin/web/yacd
          mkdir -p release/singdns/web
          mkdir -p release/singdns/configs/sing-box/rules
          # 复制主程序
          cp singdns release/singdns/
          # 复制 sing-box 到 bin 目录
          cp sing-box release/singdns/bin/
          # 复制面板到 bin/web 目录
          cp -r bin/web/metacubexd/* release/singdns/bin/web/metacubexd/
          cp -r bin/web/yacd/* release/singdns/bin/web/yacd/
          # 复制前端构建文件到 web 目录
          cp -r web/build/* release/singdns/web/
          # 复制配置文件和规则文件
          cp configs/sing-box/config.json release/singdns/configs/sing-box/
          cp configs/sing-box/rules/*.srs release/singdns/configs/sing-box/rules/
          # 复制脚本和文档
          cp install.sh release/singdns/
          cp singdns.sh release/singdns/
          cp README.md release/singdns/
          cp LICENSE release/singdns/ || true
          # 创建版本文件
          echo "${GITHUB_REF_NAME}" > release/singdns/VERSION
          # 打包
          cd release
          tar -czf singdns-alpine-amd64.tar.gz singdns/
          
      - name: 上传 Alpine 构建产物
        uses: actions/upload-artifact@v3
        with:
          name: singdns-alpine
          path: release/singdns-alpine-amd64.tar.gz
          
  create-release:
    needs: [build-backend-linux, build-backend-alpine]
    runs-on: ubuntu-latest
    
    steps:
      - name: 下载 Linux 构建产物
        uses: actions/download-artifact@v3
        with:
          name: singdns-linux
          path: release
          
      - name: 下载 Alpine 构建产物
        uses: actions/download-artifact@v3
        with:
          name: singdns-alpine
          path: release
          
      - name: 创建 Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/singdns-linux-amd64.tar.gz
            release/singdns-alpine-amd64.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}